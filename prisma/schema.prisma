// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// データスキーマの定義.
model Home {
  // 主キー uuid() とか autoincrement() とかでもok
  id String @id @default(cuid())
  // ? 必須ではない.
  image String?
  title String
  description String
  // 浮動小数点. double precision or DOUBLE.
  price Float
  guests Int
  beds Int
  baths Int
  // 基本的にデータモデルには下記２つは入れ他方が良い.追跡できる.
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  owner User @relation(fields: [ownerId], references: [id])
  ownerId String
}

// 認証対応のため下記コピペで追加.
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  listedHomes   Home[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}